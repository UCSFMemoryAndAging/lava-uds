Setting up the demo mysql database. 

1) Install MySQL (version 5.x)
2) Login to MySQL 
	--from the shell execute ./mysql  (usually in /usr/local)
	--if there is a password on your root user in mysql then launch with ./mysql -u root -p and you will be prompted for the password.

3) change the root password if it is not already set and do other lock down activities, like remove  any guest users or global access (the mysql site has instructions about this)	

4) add a demo database
	--from within mysql execute:
		create database demo;

5) add a user account
	--from within mysql execute:
		use mysql;
		create user demo;
		update user set password = PASSWORD('[a password]') where user = 'demo';
		flush privileges;
		
	-- the following will create two accounts for the 'demo' user; one that can be accessed
	-- locally ('demo'@'localhost') and one that can be accessed remotely (demo which
	-- is equivalent to 'demo'@'%' where '%' is a wildcard which means user demo can connect from 
	   any remote host)
	-- the above statement may only create 'demo'@'%' which can be used for remote access
	-- use the below statement if mysql is on the same server as the web application,
	-- it can be substituted for the create and update statements above
		create user demo identified by 'a password', 'demo'@'localhost' identified by 'a password';
		
6) exit mysql and run the demo script to create the database and import the demo data. 
	--from the shell this would look like 
		./mysql -u root -p demo < [path to script file]/[script file name]
		e.g. ./mysql -u root -p demo < ../complete/lava-demo-complete-uds-dump=3.1.0.sql
		
		
7) give your user account full permission on the demo database
	--from within mysql  execute:
		use mysql;
		grant all on demo.* to demo;
		flush privileges;
		
	--	if user 'demo' has both local and remote accounts, use: 
		grant all on demo.* to demo, 'demo'@'localhost';
	
8) If using JBoss:
     copy the config/demo_mysql_ds.xml file into your jboss deploy directory.
    	--edit to use your demo database account username and password.
	    --edit to use your mysql ip address and database name...
	    --edit your local datasource bean in your spring configuration files to use the jndi
	      name that you have assigned to the datasource in the demo_mysql_ds.xml file. 
   If using Apache Tomcat:
     copy the confix/demo.xml file into your Tomcat deploy directory, i.e.
     conf/Catalina/locahost
     -- edit to use the correct username, password
     -- edit the url to use your correct server address and database name
     -- note that the MySQL JDBC driver jar file should be in your Apache Tomcat lib directory
        (e.g. mysql-connector-java-5.1.8-bin.jar)
    
      
	
	
	