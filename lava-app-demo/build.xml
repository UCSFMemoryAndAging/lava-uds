<?xml version="1.0"?>

<project name="lava"  basedir="."  default="usage">
    <property file="build.properties"/>

    <property name="war.file" value="${warName}.war"/>
  
    <property name="lava-core.path" value="${workspace.path}/lava/lava-core"/>
	<property name="lava-crms.path" value="${workspace.path}/lava/lava-crms"/>
	<property name="lava-crms-nacc.path" value="${workspace.path}/lava-uds/lava-crms-nacc"/>
	<property name="instance.path" value="${workspace.path}/lava-uds/lava-app-${instanceName}"/>
	<!-- EMORY: add lava-crms-ignav projects to test using demo -->
	<property name="lava-crms-ignav.path" value="${workspace.path}/lava/lava-crms-ignav"/>
	<property name="lava-crms-ignav-nacc.path" value="${workspace.path}/lava-uds/lava-crms-ignav-nacc"/>
			
    <property name="src.folder" value="src"/>
    <property name="lib.folder" value="WEB-INF/lib"/>
    <property name="build.folder" value="WEB-INF/classes"/>
    <property name="name" value="lava"/>

	<property name="instance-deploy.path" value="${deploy.path}/${instanceName}.war"/>
	
    
	<path id="master-classpath">
        <fileset dir="${instance-deploy.path}/${lib.folder}">
            <include name="*.jar"/>
        </fileset>
        <!-- We need the servlet API classes:        -->
        <!--   for JBoss Tomcat 4.1 use servlet.jar        -->
        <!--   for Tomcat 5.0 use servlet-api.jar    -->
        <!--   for Other app server - check the docs -->
        <fileset dir="${j2ee14lib.home}">
            <include name="servlet*.jar"/>
        </fileset>
        <pathelement path="${instance-deploy.path}/${build.folder}"/>
    </path>

    <target name="usage">
        <echo message=""/>
        <echo message="${name} build file"/>
        <echo message="-----------------------------------"/>
        <echo message=""/>
        <echo message="Available targets are:"/>
        <echo message=""/>
        <echo message="compile --> Compile java files into deployment classes directory"/>
        <echo message="compile-all --> Compile All Java files into deployment classes directory"/>
    	<echo message="copy  --> Copy all files into the deployment directory"/>
    	<echo message="merge-decorator-files --> Concatenates all scope and instance decorator config files into a single file in the deploy directory"/>
    	<echo message="merge-i18n-files --> Concatenates all scope and instance properties files for each type of property file into a single file in the deploy directory"/>
        <echo message="rebuild-deploy  --> Delete and rebuild the deployment directory"/>
        <echo message="deploy  --> Copy files into the deployment directory and compile java files"/>
        <echo message="reload  --> Just reload the webapp by touching the web.xml file"/>
		<echo message="deploy-reload  --> Copy files into the deployment directory, compile and reload webapp"/>
    	<echo message="package-war --> Package application as a WAR file and place in workspace directory"/>
        <echo message="clean-class-files --> delete the compiled class files from the deployment directory"/>
        <echo message="clean-all --> Delete the entire deployment directory"/>
        <echo message=""/>
    </target>

    <target name="compile" description="Compile all modified java source files into the deploy build folder">
        <mkdir dir="${instance-deploy.path}/${build.folder}"/>
        <javac destdir="${instance-deploy.path}/${build.folder}" target="1.6" debug="true"
               deprecation="false" optimize="false" failonerror="true">
            <src path="${lava-core.path}/${src.folder}"/>
        	<src path="${lava-crms.path}/${src.folder}"/>
        	<src path="${lava-crms-ignav.path}/${src.folder}"/>
           	<src path="${lava-crms-nacc.path}/${src.folder}"/>
        	<src path="${lava-crms-ignav-nacc.path}/${src.folder}"/>
        	<src path="${instance.path}/${src.folder}"/>
            <classpath refid="master-classpath"/>
        </javac>
    </target>
    
	<target name="compile-all" depends="clean-class-files,compile"/>
	 
	<target name="copy" description="copy all files into the deployment directory">
		<copy todir="${instance-deploy.path}" preservelastmodified="true" verbose="true">
			<fileset dir="${lava-core.path}" excludes="**/CVS/**,database/**,src/**,**/*.class,bin/**,.classpath,.project,build.*"/>
			<fileset dir="${lava-crms.path}" excludes="**/CVS/**,database/**,src/**,**/*.class,bin/**,.classpath,.project,build.*"/>
			<fileset dir="${lava-crms-nacc.path}" excludes="**/CVS/**,database/**,src/**,**/*.class,bin/**,.classpath,.project,build.*"/>
			<fileset dir="${instance.path}" excludes="**/CVS/**,database/**,src/**,**/*.class,bin/**,.classpath,.project"/>
		</copy>

		<!-- ignav is based on some files replacing the core/crms files of the same name, even if the core/crms
			files are dated later such that no copy would take place without the overwrite attribute set true.
			so this is a special copy for ignav with overwrite="true". this means that any changes made to the
			core/crms version of the file should be made to the ignav version, since the ignav version will be used -->
		<copy todir="${instance-deploy.path}" preservelastmodified="true" verbose="true" overwrite="true">
			<fileset dir="${lava-crms-ignav.path}" excludes="**/CVS/**,database/**,src/**,**/*.class,bin/**,.classpath,.project,build.*"/>
			<fileset dir="${lava-crms-ignav-nacc.path}" excludes="**/CVS/**,database/**,src/**,**/*.class,bin/**,.classpath,.project,build.*"/>
		</copy>
	</target>    
	
	<target name="merge-decorator-files" description="merge all decorator files from different scopes and projects" depends="copy">
		<concat destfile="${instance-deploy.path}/WEB-INF/decorators/decorators.xml" append="false">
			<fileset dir="${instance-deploy.path}/WEB-INF/decorators/config" includes="decorators-xml-starttag.xml"/>		
		</concat>
		<concat destfile="${instance-deploy.path}/WEB-INF/decorators/decorators.xml" append="true">
			<fileset dir="${instance-deploy.path}/WEB-INF/decorators/config" includes="*-decorators.xml"/>		
		</concat>
		<concat destfile="${instance-deploy.path}/WEB-INF/decorators/decorators.xml" append="true">
			<fileset dir="${instance-deploy.path}/WEB-INF/decorators/config" includes="decorators-xml-endtag.xml"/>			
		</concat>
	</target>
	
	<target name="merge-i18n-files" description="merge all i18n files from different scopes and projects" depends="copy">
		<concat destfile="${instance-deploy.path}/WEB-INF/i18n/messages.properties" append="false">
			<fileset dir="${instance-deploy.path}/WEB-INF/i18n/source" includes="*-messages.properties"/>		
		</concat>
		<concat destfile="${instance-deploy.path}/WEB-INF/i18n/mvc.properties" append="false">
			<fileset dir="${instance-deploy.path}/WEB-INF/i18n/source" includes="*-mvc.properties"/>		
		</concat>
		<concat destfile="${instance-deploy.path}/WEB-INF/i18n/metadata.properties" append="false">
		    <fileset dir="${instance-deploy.path}/WEB-INF/i18n/source" includes="*-metadata.properties"/>		
		</concat>
		<concat destfile="${instance-deploy.path}/WEB-INF/i18n/custom.properties" append="false">
			<fileset dir="${instance-deploy.path}/WEB-INF/i18n/source" includes="*-custom.properties"/>		
		</concat>
	</target>
			
	<target name="rebuild-deploy" depends="clean-all,deploy"/>
		
	<target name="deploy" depends="copy,compile,merge-i18n-files,merge-decorator-files"/>
   
	<target name="reload" description="reload servlet" >
		<!-- reload the servlet by "touching" the web.xml file -->
		<touch file="${instance-deploy.path}/WEB-INF/web.xml"/>
	</target>    

    <target name="deploy-reload" depends="deploy,reload"/>
	
	<!-- package into a .war file per the Servlet Spec. -->
	<target name="package-war" depends="compile-all,deploy" description="Package web app into [instance].war">

		<!-- note that the Ant war task could also be used for packaging. -->
		<jar destfile="${packagedWar.file}">
			<zipfileset dir="${instance-deploy.path}/WEB-INF" prefix="WEB-INF" includes="web.xml,lava-servlet.xml,hibernate.properties,bean.properties"/>
			<zipfileset dir="${instance-deploy.path}/WEB-INF/functions" prefix="WEB-INF/functions" includes="functions.tld"/>
			<zipfileset dir="${instance-deploy.path}/WEB-INF/classes" prefix="WEB-INF/classes" includes="**/*.class,ehcache.xml,*.jrtx"/>
			<zipfileset dir="${instance-deploy.path}/WEB-INF/hibernate" prefix="WEB-INF/hibernate" includes="**/*.hbm.xml,**/*.xml"/>
			<zipfileset dir="${instance-deploy.path}/WEB-INF/context" prefix="WEB-INF/context" includes="**/*.xml"/>
			<zipfileset dir="${instance-deploy.path}/WEB-INF/decorators" prefix="WEB-INF/decorators" includes="**/*.jsp,**/*.xml"/>
			<zipfileset dir="${instance-deploy.path}/WEB-INF/i18n" prefix="WEB-INF/i18n" includes="**/*.properties"/>
			<zipfileset dir="${instance-deploy.path}/WEB-INF/jsp" prefix="WEB-INF/jsp" includes="**/*.jsp"/>
			<zipfileset dir="${instance-deploy.path}/WEB-INF/report" prefix="WEB-INF/report" includes="**/*.jrxml"/>
			<zipfileset dir="${instance-deploy.path}/WEB-INF/lib" prefix="WEB-INF/lib" includes="**/*.jar"/>
			<zipfileset dir="${instance-deploy.path}/WEB-INF/tags" prefix="WEB-INF/tags" includes="**/*.tag,tags-include.jsp"/>
			<zipfileset dir="${instance-deploy.path}/security" prefix="security" includes="**/*.jsp"/>
			<zipfileset dir="${instance-deploy.path}/images" prefix="images" includes="**/*.gif,**/*.png"/>
			<zipfileset dir="${instance-deploy.path}/styles" prefix="styles" includes="**/*.css"/>
			<zipfileset dir="${instance-deploy.path}/javascript" prefix="javascript" includes="**/*.js"/>
		</jar>
	</target>
	
    <target name="clean-class-files" description="Delete all .class files">
        <delete includeemptydirs="true">
  	        <fileset dir="${instance-deploy.path}/${build.folder}" includes="**/*.class"/>
        </delete>
    </target>

    <target name="clean-all" description="Delete the instance deploy folder prior to a rebuild">
        <delete dir="${instance-deploy.path}"/>
    </target>




</project>
